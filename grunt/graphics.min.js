function render(){mesh.rotation.x+=.01,mesh.rotation.y+=.01,mesh2.rotation.x+=.01,mesh2.rotation.y+=.01,mesh3.rotation.x+=.01,mesh3.rotation.y+=.01,renderer.render(scene,camera),requestAnimationFrame(render)}var renderer=new THREE.WebGLRenderer({canvas:document.getElementById("mainCanvas"),antialias:!0});renderer.setClearColor(4552069),renderer.setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight);var camera=new THREE.PerspectiveCamera(35,window.innerWidth/window.innerHeight,.1,3e3),scene=new THREE.Scene,light1=new THREE.AmbientLight(16777215,.5);scene.add(light1);var light2=new THREE.PointLight(16777215,.5);scene.add(light2);var testCubeGeom=new THREE.BoxGeometry(100,100,100),testCubemat=new THREE.MeshLambertMaterial({color:15990754}),mesh=new THREE.Mesh(testCubeGeom,testCubemat);mesh.position.set(0,0,-1e3),scene.add(mesh);var mesh2=new THREE.Mesh(testCubeGeom,testCubemat);mesh2.position.set(0,200,-1e3),scene.add(mesh2);var mesh3=new THREE.Mesh(testCubeGeom,testCubemat);mesh3.position.set(0,-200,-1e3),scene.add(mesh3),requestAnimationFrame(render);
//# sourceMappingURL=graphics.min.js.map